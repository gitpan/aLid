.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STATEFULPROTECT 1"
.TH STATEFULPROTECT 1 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
statefulProtect \- Parametric script used for monitor stateful's event
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
statefulProtect \s-1EVT_NAME\s0 \s-1RANGE\s0 \s-1EVT_BOUND\s0 \s-1RED_BOUND\s0 \s-1FREQ_EMAIL\s0 \s-1ALLOWED_FILE\s0 \s-1NOTIFY\s0 \s-1FILTER\s0 \s-1EVT_LIST\s0
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Used for specifies rule with kind \s-1STATEFUL_FILTER\s0 specified in configuration's file /etc/aLid/aLid.conf. Packet's detection happen through packet's analysis (described in log's file). It allows to intercept events identified by more patterns in sequence:
.PP
Es. Three way handshake. \s-1TCP\s0 protocol at beginning of comunication between two hosts want a particular packet's exchange:
.Sp
.Vb 3
\&        PC1 \-\-\- SYN \-\-> PC2
\&        PC1 <\-\- SYN ACK \-\- PC2
\&        PC1 \-\-\- ACK \-\-> PC2
.Ve
.PP
If you want describe a filter that intercept this event you needs to define regular expression's list and a target's list. Responsible ip, in this case, is host that begin comunication; in first and third packet it is the source \fIip()\fR, while in the second packet it is the destination ip(O).
.Sp
.Vb 3
\&        EXPRESSION=RES=\ew+\esSYN\esURGP            TARGET=I
\&        EXPRESSION=RES=\ew+\esACK\esSYN\esURGP       TARGET=O
\&        EXPRESSION=RES=\ew+\esACK\esURGP            TARGET=I
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\s-1EVT_NAME\s0" 8
.IX Item "EVT_NAME"
It specifics the event's name in which is associated a rule. The name of event allows to indenfy the rule, that send a notific or drop's rule. The name of event is unambiguous in all rules.
.IP "\s-1RANGE\s0" 8
.IX Item "RANGE"
It is the value, in seconds, of the temporal window to analyze. If N is the value of range, the temporal window to analyze is [ \s-1NOW\s0 \- N , \s-1NOW\s0 ].
.IP "\s-1EVT_BOUND\s0" 8
.IX Item "EVT_BOUND"
It's the maximun number of times that the found event can verifies inside of temporal window(\s-1RANGE\s0). Source ip, findable on log file, is considered responsible. At the overcoming of threshold, depending on configuration, can block source ip or simply notify what is happened. If an ip is blocked, there is also a mark of the moment in which it happens with reference to universal time (\s-1UTC\s0) in seconds.
.IP "\s-1RED_BOUND\s0" 8
.IX Item "RED_BOUND"
It is the number of seconds in which an blocked ip can't communicate through machine where is installed the program. When the redemption's source is reached blocked ip is unlocked. The overcoming is calculated in the following way:
.Sp
.Vb 4
\&        IF ( NOW \- BLOCKING_TIME > RED_BOUNG ) 
\&                UNLOCK BLOCKED IP 
\&        ELSE
\&                BLOCKED IP REMAINS BLOCKED
.Ve
.IP "\s-1FREQ_EMAIL\s0" 8
.IX Item "FREQ_EMAIL"
It specifics the attendance of send of notifics mail in seconds. It's optional and subordinate at the presence of options \s-1MAIL\s0 or \s-1LOG\s0.
.IP "\s-1ALLOWED_FILE\s0" 8
.IX Item "ALLOWED_FILE"
It is file's path where are listed allowed ip. If is detected an event with ip present in \s-1ALLOWED_FILE\s0 so event is ignored. File must respect following syntattic rule: every rule must contains only an ip.
.IP "\s-1NOTIFY\s0 There are 4 kinds of notific option: \s-1MAIL\s0, \s-1LOG\s0, \s-1ALL\s0, \s-1NOTHING\s0." 8
.IX Item "NOTIFY There are 4 kinds of notific option: MAIL, LOG, ALL, NOTHING."
.RS 8
.PD 0
.IP "\s-1MAIL\s0" 8
.IX Item "MAIL"
.PD
Send a notific email to alla addresses specified on file /etc/aLid/email.conf
.IP "\s-1LOG\s0" 8
.IX Item "LOG"
Allow to write a line on log file of application.
.IP "\s-1ALL\s0" 8
.IX Item "ALL"
Include both notify's typologies \s-1MAIL\s0 e \s-1LOG\s0.
.IP "\s-1NOTHING\s0" 8
.IX Item "NOTHING"
No nothification
.RE
.RS 8
.RE
.IP "\s-1FILTER\s0" 8
.IX Item "FILTER"
It specifics the policy to adopt considering ip detected. Options accepted are:  \fB\s-1DROP\s0\fR and \fB\s-1NODROP\s0\fR.
.RS 8
.IP "\s-1DROP\s0" 8
.IX Item "DROP"
It block detected ip in the firewall applying a specific rule.
.IP "\s-1NODROP\s0" 8
.IX Item "NODROP"
It doesn't execute a rule of drop in the firewall.
.RE
.RS 8
.RE
.IP "\s-1EVT_LIST\s0" 8
.IX Item "EVT_LIST"
List of monitored events that made up a stateful filter. Must respect following syntax:
.Sp
\&\s-1EXPR_REG_1\s0 \s-1TARGET_1\s0 \s-1EXPR_REG_2\s0 \s-1TARGET_2\s0 ... \s-1EXPR_REG_N\s0 \s-1TARGET_N\s0
.RS 8
.IP "\s-1EXPR_REG\s0" 8
.IX Item "EXPR_REG"
It is a filter's sub-evento. Sub-events must match in sequence.
.IP "\s-1TARGET\s0" 8
.IX Item "TARGET"
Describes the position, in log's line, of responsible's host of event.
.RE
.RS 8
.RE
.SH "NOTES"
.IX Header "NOTES"
Script reads of input file indicated in the rule through stream <\s-1STDIN\s0>.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Configuration's example:
.PP
statefulProtect \s-1THREE_WAY_HANDSHAKE\s0 10 5 7 7 /etc/aLid/ip_allowed_THREE_WAY_HANDSHAKE log drop		FILE_INPUT=/var/log/iptables.log
.Sp
.RS 8
EXPRESSION=RES=\ew+\esSYN\esURGP	 	  TARGET=I
EXPRESSION=RES=\ew+\esACK\esSYN\esURGP	  TARGET=O
EXPRESSION=RES=\ew+\esACK\esURGP	 	  TARGET=I
.RE
.PP
It executes script with \s-1THREE_WAY_HANDSHAKE\s0 as event name, using a range of 10 seconds, 5 maximum attempts in temporal window, 7 seconds as redemption threshold, 7 seconds is mail's frequency, ip_allowed_THREE_WAY_HANDSHAKE is the name of file used to specified immunes ip at event, all is notific's typology and drop is the kind of filter. \s-1FILE_INPUT\s0 is a log's file.
.SH "FILES"
.IX Header "FILES"
.IP "\fB/etc/aLid/aLid.conf\fR" 8
.IX Item "/etc/aLid/aLid.conf"
Configuration's file of the application.
.SH "REQUIREMENT"
.IX Header "REQUIREMENT"
.IP "\fBDateTime\fR" 8
.IX Item "DateTime"
DateTime \- Perl Library of cpan community
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBsharedTail, aLid, aLid.conf\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrea Martire (andreamartire@gmail.com)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright A\*^X 2010 Andrea Martire <andreamartire@gmail.com>. 
License  GPLv3+:  \s-1GNU\s0 \s-1GPL\s0 version 3 or later <http://gnu.org/licenses/gpl.html>.
This  is  free  software:  you  are free to change and redistribute it.
There is \s-1NO\s0 \s-1WARRANTY\s0, to the extent permitted by law.
