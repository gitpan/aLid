.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ALID.CONF 1"
.TH ALID.CONF 1 "2010-06-17" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBaLid.conf\fR File of aLid's Configuration
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
aLid [\s-1OPTIONS\s0]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
It allow to configure aLid. There are four kinds of options: \s-1SCRIPT\s0, \s-1OTHER_SCRIPT\s0, \s-1RULE\s0 and \s-1STATEFUL_FILTER\s0.
.Sp
.RS 8
OPTION=SPECIFICS
.RE
.PP
This form is followed of specifications pertinents to option indicate. Options \s-1SCRIPT\s0, \s-1OTHER_SCRIPT\s0 and \s-1RULE\s0 are describer in a only line.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\s-1MAIL_SERVER\s0\fR" 8
.IX Item "MAIL_SERVER"
It is the ip address of server, used to send notific's email. It is advisable to insert \s-1MX\s0 server of own subnet. Otherwise if it specifies any server \s-1MX\s0, nedds to modify present script /etc/aLid/sendmail with purpose of consent the authentication.
.IP "\fB\s-1SCRIPT\s0\fR" 8
.IX Item "SCRIPT"
Each option of script type describes th execution of a script at the beginning of application. Scripts invoked by this option are called in the same way in which they are specified. Option script must respect the following syntax:
.RS 8
.Sp
.Vb 1
\&        SCRIPT=FILENAME [ARGV] [INPUT_FILE=FILENAME2]
.Ve
.RE
.RS 8
.Sp
If script read from particular file in input, for use potentialities of share's reading, is opportune to specific files by the option.
.Sp
.Vb 1
\&        INPUT_FILE=FILENAME
.Ve
.RE
.RS 8
.Sp
Another shrewdness to observ on scripts is to define reading ( to input file ) to <\s-1STDIN\s0>; in this way script \fBsharedTail\fR may send file's line to applicant script.
.RE
.IP "\fB\s-1STATEFUL_FILTER\s0\fR" 8
.IX Item "STATEFUL_FILTER"
More info: see statefulProtect
.IP "\fB\s-1RULE\s0\fR" 8
.IX Item "RULE"
Each option of kind \s-1RULE\s0 describes a tule that will be observed by aLid. A rule is a set of informations that allow to aLid to intercept a particular event in log's file and allow to take precautions. Each rule has the following syntax:
.RS 8
.Sp
.RS 8
RULE=EVT_NAME \s-1REG_EXPRESSION\s0 \s-1RANGE\s0 \s-1EVT_BOUND\s0 \s-1RED_BOUND\s0 \s-1ALLOWED_FILE\s0 \s-1NOTIFY\s0 \s-1FILTER\s0 [\s-1FREQ_EMAIL\s0] \s-1INPUT_FILE\s0
.IP "\s-1EVT_NAME\s0" 8
.IX Item "EVT_NAME"
It specifics the event's name in which is associated a rule. The name of event allows to indenfy the rule, that send a notific or drop's rule. The name of event is unambiguous in all rules.
.IP "\s-1REG_EXPRESSION\s0" 8
.IX Item "REG_EXPRESSION"
A regular expression allows to verify the presence of specified character inside of each line of file in input. When a file's line matches the regular expression so it is considered as presentation of monitored event.
.IP "\s-1RANGE\s0" 8
.IX Item "RANGE"
It is the value, in seconds, of the temporal window to analyze. If N is the value of range, the temporal window to analyze is [ \s-1NOW\s0 \- N , \s-1NOW\s0 ].
.IP "\s-1EVT_BOUND\s0" 8
.IX Item "EVT_BOUND"
It's the maximun number of times that the found event can verifies inside of temporal window(\s-1RANGE\s0). Source ip, findable on log file, is considered responsible. At the overcoming of threshold, depending on configuration, can block source ip or simply notify what is happened. If an ip is blocked, there is also a mark of the moment in which it happens with reference to universal time (\s-1UTC\s0) in seconds.
.IP "\s-1RED_BOUND\s0" 8
.IX Item "RED_BOUND"
It is the number of seconds in which an blocked ip can't communicate through machine where is installed the program. When the redemption's source is reached blocked ip is unlocked. The overcoming is calculated in the following way:
.RS 8
.Sp
.RS 8
\&\s-1IF\s0 ( \s-1NOW\s0 \- \s-1BLOCKING_TIME\s0 > \s-1RED_BOUNG\s0 ) 
	\s-1UNLOCK\s0 \s-1BLOCKED\s0 \s-1IP\s0 
\&\s-1ELSE\s0
	\s-1BLOCKED\s0 \s-1IP\s0 \s-1REMAINS\s0 \s-1BLOCKED\s0
.RE
.RE
.RS 8
.RE
.IP "\s-1ALLOWED_FILE\s0" 8
.IX Item "ALLOWED_FILE"
It is file's path where are listed allowed ip.
.IP "\s-1NOTIFY\s0" 8
.IX Item "NOTIFY"
There are 4 kinds of notific option: \s-1MAIL\s0, \s-1LOG\s0, \s-1ALL\s0, \s-1NOTHING\s0.
.RS 8
.IP "\s-1MAIL\s0" 8
.IX Item "MAIL"
Send a notific email to alla addresses specified on file /etc/aLid/email.conf
.IP "\s-1LOG\s0" 8
.IX Item "LOG"
Allow to write a line on log file of application.
.IP "\s-1ALL\s0" 8
.IX Item "ALL"
Include both notify's typologies \s-1MAIL\s0 e \s-1LOG\s0.
.IP "\s-1NOTHING\s0" 8
.IX Item "NOTHING"
No nothification
.RE
.RS 8
.RE
.IP "\s-1FILTER\s0" 8
.IX Item "FILTER"
It specifics the policy to adopt considering ip detected. Options accepted are:  \fB\s-1DROP\s0\fR and \fB\s-1NODROP\s0\fR.
.RS 8
.IP "\s-1DROP\s0" 8
.IX Item "DROP"
It block detected ip in the firewall applying a specific rule.
.IP "\s-1NODROP\s0" 8
.IX Item "NODROP"
It doesn't execute a rule of drop in the firewall.
.RE
.RS 8
.RE
.IP "[\s-1FREQ_EMAIL\s0]" 8
.IX Item "[FREQ_EMAIL]"
It specifics the attendance of send of notifics mail in seconds. It's optional and subordinate at the presence of options \s-1MAIL\s0 or \s-1LOG\s0.
.IP "\s-1INPUT_FILE\s0" 8
.IX Item "INPUT_FILE"
Input file where rule is applied. Needs to respect following syntax:
.RS 8
.Sp
.RS 8
INPUT_FILE=FILE_PATH
.RE
.RE
.RS 8
.Sp
where \s-1FILE_PATH\s0 is file's path in which are applied rule.
.RE
.RE
.RS 8
.RE
.RE
.RS 8
.RE
.SH "IMPLEMENTATION"
.IX Header "IMPLEMENTATION"
Each rule is applied by esecution of a parametric script:
.Sp
.Vb 1
\&        /var/aLid/script/eventProtect EVT_NAME REG_EXPRESSION RANGE EVT_BOUND RED_BOUND ALLOWED_FILE NOTIFY FILTER [FREQ_EMAIL]
.Ve
.PP
For allow an efficient reading, that is read from file of input, passed by <\s-1STDIN\s0> using another script (\fBsharedTail\fR) that allows share's reading on the same file.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
An example of file's definition /etc/aLid/aLid.conf
.Sp
.RS 8
\&\s-1MAIL_SERVER\s0 = out.virgilio.it
.Sp
# List of default scripts
.Sp
SCRIPT=/etc/aLid/script/synProtect 10 5 7 /etc/aLid/ip_blocked_synprotect all drop 1
.Sp
SCRIPT=/etc/aLid/script/arpProtect all drop FILE_INPUT=/var/lib/arpwatch/arp.dat
SCRIPT=yes hello > /dev/null
.Sp
RULE=SPAM \esDPT=25\es 5 10 5 7 /etc/aLid/ip_allowed_SPAMMING all drop FILE_INPUT=/var/log/iptables.log
.RE
.SH "FILES"
.IX Header "FILES"
.IP "\fB/etc/aLid/emails.conf\fR" 8
.IX Item "/etc/aLid/emails.conf"
File in which are specified email's addresses where are send notific's mails.
.IP "\fB/etc/aLid/log\fR" 8
.IX Item "/etc/aLid/log"
File in which are saved informations relative to detected events by application.
.SH "REQUIREMENT"
.IX Header "REQUIREMENT"
.IP "\fBarpwatch\fR" 8
.IX Item "arpwatch"
Arpwatch \- http://www.securityfocus.com/tools/142
.IP "\fBDateTime\fR" 8
.IX Item "DateTime"
DateTime \- Perl Library of cpan community
.IP "\fBiptables\fR" 8
.IX Item "iptables"
iptables \- Stateful firewall
.SH "SEE ALSO"
.IX Header "SEE ALSO"
aLid, eventProtect, sharedTail
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrea Martire (andreamartire@gmail.com)
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright A\*^X 2010 Andrea Martire <andreamartire@gmail.com>. 
License  GPLv3+:  \s-1GNU\s0 \s-1GPL\s0 version 3 or later <http://gnu.org/licenses/gpl.html>.
This  is  free  software:  you  are free to change and redistribute it.
There is \s-1NO\s0 \s-1WARRANTY\s0, to the extent permitted by law.
